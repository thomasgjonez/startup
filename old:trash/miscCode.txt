// useEffect(() => {
  //   const storedCode = localStorage.getItem("roomCode");
  //   if (storedCode) {
  //     setRoomCode(storedCode);
  //   }
  // }, []);

  // const handleRoomChange = (event) => {
  //   setRoomCode(event.target.value);
  // };
  // const handleGuess = () => {
  //   setBlueTeam((prevBlueTeam) =>
  //     prevBlueTeam.map((player) =>
  //       player.username === userName
  //         ? { ...player, guessedWord: userGuess }
  //         : player
  //     )
  //   );
  
  //   setGreenTeam((prevGreenTeam) =>
  //     prevGreenTeam.map((player) =>
  //       player.username === userName
  //         ? { ...player, guessedWord: userGuess }
  //         : player
  //     )
  //   );

  //   setGuessedWord(userGuess);
  //   setUserGuess("");

  //   localStorage.setItem("blueTeam", JSON.stringify(blueTeam));
  //   localStorage.setItem("greenTeam", JSON.stringify(greenTeam));
  // };

  // Handle Enter key press
  // const handleKeyPress = (event) => {
  //   if (event.key === "Enter") {
  //     event.preventDefault();
  //     localStorage.setItem("roomCode", roomCode);
  //     alert("Room code saved!");
  //   }
  // }
  // const handleKeyPressforWord = (event) => {
  //   if (event.key === "Enter") {
  //     event.preventDefault();
  //     handleGuess();
  //   }
  // }

  // useEffect(() => {
  //   if (timer > 0) {
  //     const countdown = setInterval(() => {
  //       setTimer((prevTime) => prevTime - 1);
  //     }, 1000);
  //     return () => clearInterval(countdown);
  //   } else if (timer === 0) {
  //     endRound();
  //   }
  // }, [timer]);

// will need to adjsut this later on when we have service/database stuff
//   const generateRandomUsers = (num) => {
//     const randomUsers = [];
//     for (let i = 1; i <= num; i++) {
//       randomUsers.push({
//         username: `Player_${Math.floor(Math.random() * 1000)}`,
//         turn: "",
//         guessedWord: "" 
//       });
//     }

//     return randomUsers;
//   };
// // getRandomWord andn getRandomDescription are for demo purposes, will change in future and are place holders for future APIs
//   const getRandomWord = () => {
//     const words = ["apple"];
//     return words[Math.floor(Math.random() * words.length)];
//   };

//   const getRandomDescription = () => {
//     const descriptions = ["Its a red fruit", "Its red and you can eat it", "A red fruit that is sweet in crispy", "fruit that comes in three colors of red, gold, and green", "fruit that comes from a tree", " a _____ a day keeps the doctor away"];
//     return descriptions[Math.floor(Math.random() * descriptions.length)];
//   }

//   const pickDescriber = () => {
//     if (!blueTeam.length || !greenTeam.length) {
//       console.warn("Cannot pick describer: Teams are empty.");
//       return;
//     }

//     let describer;
//     let response;
  
//     if (teamTurn === "blue") {
//       describer = blueTeam[blueDescriberIndex % blueTeam.length];
//       setBlueDescriberIndex((prev) => (prev + 1) % blueTeam.length); 
//     } else {
//       describer = greenTeam[greenDescriberIndex % greenTeam.length];
//       setGreenDescriberIndex((prev) => (prev + 1) % greenTeam.length);
//     }
//     response = getRandomDescription();
//     setCurrentDescriber(describer);
//     setDescriberResponse(response);

    
//   };
// const initializeTeams = () => {
  //   const blue = generateRandomUsers(3);
  //   const green = generateRandomUsers(3);
  //   blue.push({
  //     username: userName,
  //     turn: "",
  //     guessedWord: guessedWord 
  //   })
  //   setBlueTeam(blue);
  //   setGreenTeam(green);
  //   setTeamsInitialized(true);

  //   localStorage.setItem("blueTeam", JSON.stringify(blue));
  //   localStorage.setItem("greenTeam", JSON.stringify(green));
  // };

  // const initializeGame = () => {
  //   setBlueTeamPts(0);
  //   setGreenTeamPts(0);
  //   setTimeout(() => {
  //     pickDescriber();
  //     startRound();
  //   }, 100);
    
  // }

  // const startRound = () => {
  //   if (winCondition) return;
  //   setTimer(10); // Reset timer
  //   setRandomWord(getRandomWord());

  // }

  // useEffect(() => {
  //   if (guessedWord === randomWord && randomWord !== "") {
  //     alert("Team switch");
  //     setTeamTurn((prev) => (prev === "blue" ? "green" : "blue")); 
  //     setRandomWord(getRandomWord());
  //     setGuessedWord("");
  //   }
  // }, [guessedWord, randomWord]);

  // useEffect(() => {
  //   if (!currentDescriber) return;
  
  //   setBlueTeam((prevBlueTeam) =>
  //     prevBlueTeam.map((player) => ({
  //       ...player,
  //       turn: player.username === currentDescriber.username ? "Describer" : "",
  //     }))
  //   );
  
  //   setGreenTeam((prevGreenTeam) =>
  //     prevGreenTeam.map((player) => ({
  //       ...player,
  //       turn: player.username === currentDescriber.username ? "Describer" : "",
  //     }))
  //   );
  // }, [currentDescriber]);

  // useEffect(() => {
  //   if (teamsInitialized) {
  //     pickDescriber();
  //   }
  // }, [teamTurn]);
  

  // const endRound = () => {
  //   if (teamTurn === "blue") {
  //     setGreenTeamPts((prev) => prev + 1);
  //   } else {
  //     setBlueTeamPts((prev) => prev + 1);
  //   }


  //   // Check for win condition
  //   if (blueTeamPts === 5 || greenTeamPts === 5) {
  //     setWinCondition(true);
  //     alert(`${blueTeamPts === 5 ? "Blue Team" : "Green Team"} Wins!`);
  //   } else {
  //     startRound();
  //   }
  // };